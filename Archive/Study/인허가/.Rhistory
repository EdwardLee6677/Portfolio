group_by(job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
job_male21
ra21
###21년
region_ageband21 = df21 %>%
count(region, ageband) %>%
group_by(region) %>%
mutate(pct = round(n/sum(n)*100, 2))
head(region_ageband21)
region_ageband15
##3 지역별 연령대
###15년
region_ageband15 = df15 %>%
count(region, ageband) %>%
group_by(region) %>%
mutate(pct = round(n/sum(n)*100, 2))
region_ageband15
romyad15
library(foreign)
library(dplyr)
library(ggplot2)
library(readxl)
# 2. 2015년과 2021년데이터 불러오기
r_df15 = read.spss("C:/Users/Edward/Desktop/R/Koweps_hpc10_2015_beta7.sav", to.data.frame=T)
r_df15
r_df21 = read.spss("C:/Users/Edward/Desktop/R/Koweps_hpc16_2021_beta1.sav", to.data.frame=T)
r_df21
## 원본데이터 보존
df15 = r_df15
df21 = r_df21
## 데이터 검토
head(df15)
tail(df15)
View(df15)
dim(df15)
str(df15)
summary(df15)
head(df21)
tail(df21)
View(df21)
dim(df21)
str(df21)
summary(df21)
## 사용할 col 이름 변경
df15 = rename(df15,gender = h10_g3, #성별
birth = h10_g4,  #출생년도
income = p1002_8aq1, #수입
code_job = h10_eco9, #직업코드
code_region = h10_reg7) #지역코드
df21 = rename(df21,gender = h16_g3, #성별
birth = h16_g4,  #출생년도
income = p1602_8aq1, #수입
code_job = h16_eco9, #직업코드
code_region = h16_reg7) #지역코드
## 성별:분석
class(df15$gender)
table(df15$gender)
class(df21$gender)
table(df21$gender)
comment1 ="
# 결측치 처리
df15$gender <- ifelse(df15$gender == 9, NA, df15$gender)
# 결측치 확인
table(is.na(df15$gender))
"
# gender 변수값을 1,2에서 'male'과 'female'로 변경
df15$gender = ifelse(df15$gender == 1, 'male', 'female')
table(df15$gender)
qplot(df15$gender, xlab='성별') #분포 확인
df21$gender = ifelse(df21$gender == 1, 'male', 'female')
table(df21$gender)
qplot(df21$gender, xlab='성별') #분포 확인
#2 월급:전처리
# income변수는 일한 달의 월 평균 임금을 의미
class(df15$income)
summary(df15$income)
qplot(df15$income, xlab='월급') #분포 확인
class(df21$income)
summary(df21$income)
qplot(df21$income, xlab='월급') #분포 확인
#15년 데이터 이상치 결측 처리
df15$income <- ifelse(df15$income %in% c(0,9999), NA, df15$income)
#결측치 확인
table(is.na(df15$income))
#21년 데이터 이상치 결측 처리
df21$income <- ifelse(df21$income %in% c(0,9999), NA, df21$income)
#결측치 확인
table(is.na(df21$income))
##1 나이와 월급 관계 확인
# *세대 간 소득 격차가 어느 정도인지 확인
#1 나이변수검토
# *한국복지패널데이터는 나이변수가 없고 출생년도변수만 있어서, 파생변수로 나이변수 생성이 필요함
# *출생년도 변수 검토후 나이변수 생성
class(df15$birth)
summary(df15$birth)
qplot(df15$birth, xlab='출생년도')
table(is.na(df15$birth))
class(df21$birth)
summary(df21$birth)
qplot(df21$birth, xlab='출생년도')
table(is.na(df21$birth))
# 출력값을 보면 이상치와 결측치가 없으므로 바로 파생변수 생성으로 넘어감.
# *만약 발견된다면 comment2와 같은 작업이 필요
comment2 = "
결측치 처리
df21$birth <- ifelse(df21$birth == 9999, NA, df21$birth)
결측치 확인
table(is.na(df21$birth))
"
#2 파생변수 생성
# 2015년 조사자료임으로 2015에서 출생년도를 빼고 1을 더해 만나이가 아닌 실제 나이를 구한다.
df15$age = 2015-df15$birth + 1
summary(df15$age)
qplot(df15$age, xlab='나이')
# 마찬가지로 2021년 조사자료임으로 2021에서 출생년도를 빼고 1을 더해 만나이가 아닌 실제 나이를 구한다.
df21$age = 2021-df21$birth + 1
summary(df21$age)
qplot(df21$age, xlab='나이')
##1 나이 대비 월급 평균표 생성
age_income15 = df15 %>%
filter(!is.na(income)) %>%
group_by(age) %>%
summarise(mean_income15 = mean(income))
head(age_income15)
age_income21 = df21 %>%
filter(!is.na(income)) %>%
group_by(age) %>%
summarise(mean_income21 = mean(income))
head(age_income21)
## 선 그래프 생성
#x=age, y=mean_income15
amip15 = ggplot(data = age_income15, aes(x = age, y = mean_income15)) + geom_line() + xlab('나이') + ylab('15년도 평균임금')
amip15
amip21 = ggplot(data = age_income21, aes(x = age, y = mean_income21)) + geom_line() + xlab('나이') + ylab('21년도 평균임금')
amip21
#3 연령대별 월급
df15 = df15 %>%
mutate(ageband = ifelse(age < 35, 'Young', ifelse(age <= 60, 'Middle', 'Old')))
table(df15$ageband)
qplot(df15$ageband, xlab='연령대')
df21 = df21 %>%
mutate(ageband = ifelse(age < 35, 'Young', ifelse(age <= 60, 'Middle', 'Old')))
table(df21$ageband)
qplot(df21$ageband, xlab='연령대')
#연령대별 변수처리
ageband_income15 = df15 %>%
filter(!is.na(income)) %>%
group_by(ageband) %>%
summarise(mean_income15 = mean(income))
ageband_income15
ageband_income21 = df21 %>%
filter(!is.na(income)) %>%
group_by(ageband) %>%
summarise(mean_income21 = mean(income))
ageband_income21
#그래프 생성
ami15 = ggplot(data = ageband_income15, aes(x = ageband, y = mean_income15)) +
geom_col() + xlab('연령대') + ylab('15년도 평균임금') +
scale_x_discrete(limits = c("Young", "Middle", "Old"))
ami15
ami21 = ggplot(data = ageband_income21, aes(x = ageband, y = mean_income21)) +
geom_col() + xlab('연령대') + ylab('21년도 평균임금') +
scale_x_discrete(limits = c("Young", "Middle", "Old"))
ami21
#성별 및 연령대별 월급
gender_income15 = df15 %>%
filter(!is.na(income)) %>%
group_by(ageband, gender) %>%
summarise(mean_income15 = mean(income))
gender_income15
gender_income21 = df21 %>%
filter(!is.na(income)) %>%
group_by(ageband, gender) %>%
summarise(mean_income21 = mean(income))
gender_income21
cd=read.csv("C:/Users/Edward/Desktop/R/cdnowElog.csv")
cd
library(ggplot2)
library(lubridate)
library(dplyr)
library(tidyr)
library(stringr)
cd$date=ymd(cd$date)
cd
ggplot(data=cd, aes(x=date, fill=cds)) + geom_histogram()
ggplot(data=cd, aes(x=date), y=cds) + geom_bar()
df=tapply(cd$cds, cd$date, sum)
barplot(df)
ggplot(data=cd, aes(x=date, fill=cds)) + geom_histogram()
barplot(df)
write.csv(df)
write.csv(df,file = 'cd.csv')
read.csv('cd.csv')
colnames(cd) = c('date','cds')
cd
cds=read.csv("C:/Users/Edward/Desktop/R/cdnowElog.csv")
cds
library(ggplot2)
library(lubridate)
library(dplyr)
library(tidyr)
library(stringr)
cds$date=ymd(cds$date)
cds
ggplot(data=cd, aes(x=date, fill=cds)) + geom_histogram()
ggplot(data=cd, aes(x=date), y=cds) + geom_bar()
df=tapply(cds$cds, cds$date, sum)
barplot(df)
write.csv(df,file = 'cd.csv')
cd=read.csv('cd.csv')
colnames(cd) = c('date','cds')
cd
ggplot(cd, aes(x=Date))
ggplot(cd, aes(x=Date)) + geom_histogram()
ggplot(cd, aes(x=date)) + geom_histogram()
ggplot(cd, aes(x=dates)) + geom_histogram()
ggplot(cd, aes(x=date)) + geom_histogram()
scale_x_date(labels = date_format("%Y-%b"),
ggplot(cd, aes(x=date)) + geom_histogram() + scale_x_date(labels = date_format("%Y-%b"),
ggplot(cd, aes(x=date)) + geom_histogram() + scale_x_date(labels = date_format("%Y-%b")
ggplot(cd, aes(x=date)) + geom_histogram() + scale_x_date(labels = date_format("%Y-%b"))
ggplot(cd, aes(x=date)) + geom_histogram() + scale_x_date(labels = date_format("%Y-%b"))
cd$date = as.Date(cd$date)
ggplot(cd, aes(x=date)) + geom_histogram() + scale_x_date(labels = date_format("%Y-%b"))
library(scales)
ggplot(cd, aes(x=date)) + geom_histogram() + scale_x_date(labels = date_format("%Y-%b"))
ggplot(cd, aes(x=date)) + geom_histogram()
cd$date = as.Date(cd$date)
ggplot(cd, aes(x=date)) + geom_histogram()
cds=read.csv("C:/Users/Edward/Desktop/R/cdnowElog.csv")
cds
library(ggplot2)
library(lubridate)
library(dplyr)
library(tidyr)
library(stringr)
library(scales)
cds$date=ymd(cds$date)
cds
ggplot(data=cd, aes(x=date, fill=cds)) + geom_histogram()
ggplot(data=cd, aes(x=date), y=cds) + geom_bar()
df=tapply(cds$cds, cds$date, sum)
barplot(df)
write.csv(df,file = 'cd.csv')
cd=read.csv('cd.csv')
colnames(cd) = c('date','cds')
cd$date = as.Date(cd$date)
ggplot(cd, aes(x=date)) + geom_histogram()
cds=read.csv("C:/Users/Edward/Desktop/R/cdnowElog.csv")
cds
library(ggplot2)
library(lubridate)
library(dplyr)
library(tidyr)
library(stringr)
library(scales)
cds$date=ymd(cds$date)
cds
ggplot(data=cd, aes(x=date, fill=cds)) + geom_histogram()
ggplot(data=cd, aes(x=date), y=cds) + geom_bar()
df=tapply(cds$cds, cds$date, sum)
barplot(df)
write.csv(df,file = 'cd.csv')
cd=read.csv('cd.csv')
colnames(cd) = c('date','cds')
cd$date = as.Date(cd$date)
ggplot(cd, aes(x=date)) + geom_histogram()
cd
ggplot(cd, aes(x=date)) + geom_histogram(bins = 10)
ggplot(cd, aes(x=date)) + geom_histogram(bins = 50)
ggplot(cd, aes(x=date)) + geom_histogram(bins = 60)
cds
ggplot(cd, aes(x=date, y=cds)) + geom_histogram(bins = 60)
ggplot(cd, aes(x=date),y=cds) + geom_histogram(bins = 60)
ggplot(cd, aes(x=date)) + geom_histogram(bins = 60)
ggplot(cd, aes(x=date)) + geom_histogram(bins = 100)
ggplot(cd, aes(x=date)) + geom_histogram(bins = 30)
ggplot(data=cd, aes(x=date, fill=cds)) + geom_histogram()
ggplot(data=cd, aes(x=date), y=cds) + geom_bar()
ggplot(data=cds, aes(x=date, fill=cds)) + geom_histogram()
ggplot(cd, aes(x=date, y=cds)) + geom_bar()
ggplot(cd, x=date, y=cds) + geom_bar()
ggplot(data=cds, aes(x=date), y=cds) + geom_bar()
ggplot(cds, aes(x=cds)) + geom_histogram()
cds
ggplot(cd, aes(x=date, y=cds))
ggplot(cd, aes(x=date, y=cds)) + geom_line()
library(ggplot2)
cds=read.csv("C:/Users/Edward/Desktop/R/cdnowElog.csv")
cds
ggplot(cds, aes(x=cds)) + geom_histogram()
df=tapply(cds$cds, cds$date, sum)
barplot(df)
df=tapply(cds$cds, cds$date, sum)
write.csv(df,file = 'cd.csv')
cd=read.csv('cd.csv')
colnames(cd) = c('date','cds')
cd
cd$date = as.Date(cd$date)
ggplot(cd, x=date, y=cds) + geom_bar()
ggplot(cd, aes(x=date, y=cds)) + geom_line()
library(ggplot2)
cds=read.csv("C:/Users/Edward/Desktop/R/cdnowElog.csv")
cds
ggplot(cds, aes(x=cds)) + geom_histogram()
df=tapply(cds$cds, cds$date, sum)
write.csv(df,file = 'cd.csv')
cd=read.csv('cd.csv')
colnames(cd) = c('date','cds')
cd
cd$date = as.Date(cd$date)
library(stringr)
cds=read.csv("C:/Users/Edward/Desktop/R/cdnowElog.csv")
cds
ggplot(cds, aes(x=cds)) + geom_histogram()
df=tapply(cds$cds, cds$date, sum)
write.csv(df,file = 'cd.csv')
cd=read.csv('cd.csv')
colnames(cd) = c('date','cds')
cd
cd$date = as.Date(cd$date)
library(stringr)
library(lubridate)
cds=read.csv("C:/Users/Edward/Desktop/R/cdnowElog.csv")
cds
ggplot(cds, aes(x=cds)) + geom_histogram()
df=tapply(cds$cds, cds$date, sum)
write.csv(df,file = 'cd.csv')
cd=read.csv('cd.csv')
colnames(cd) = c('date','cds')
cd
cd$date = as.Date(cd$date)
cd
cds
ggplot(cds, aes(x=cds)) + geom_histogram()
cds$date=ymd(cds$date)
df=tapply(cds$cds, cds$date, sum)
write.csv(df,file = 'cd.csv')
cd=read.csv('cd.csv')
colnames(cd) = c('date','cds')
cd
library(ggplot2)
library(stringr)
library(lubridate)
cds=read.csv("C:/Users/Edward/Desktop/R/cdnowElog.csv")
cds
ggplot(cds, aes(x=cds)) + geom_histogram()
df=tapply(cds$cds, cds$date, sum)
write.csv(df,file = 'cd.csv')
cd=read.csv('cd.csv')
colnames(cd) = c('date','cds')
cd
cd$date = ymd(cd$date)
cd
ggplot(cd, x=date, y=cds) + geom_bar()
ggplot(cd, aes(x=date, y=cds)) + geom_line()
ggplot(cd, x=date) + geom_bar()
ggplot(cd, aes(x=date, y=cds)) + geom_line()
ggplot(cd, x=date) + geom_bar()
ggplot(cd, aes(x=date)) + geom_bar()
ggplot(cd, aes(x=date, y=cds)) + geom_bar()
ggplot(cd, aes(x=date, y=cds)) + geom_line()
ggplot(cds, aes(x=cds)) + geom_histogram()
ggplot(cd, aes(x=date, y=cds)) + geom_line()
setwd('C:/Users/Edward/Desktop/PythonWorkspace/인허가')
library(dplyr)
library(readr)
library(CausalImpact)
library(tidyverse)
library(lubridate)
lic = read.csv('ci.csv')
lic
lic = lic[,-1]
lic
start_date = as_date('2020-01-22')
treat_date = as_date('2022-04-18')
treat_date_p1 = as_date(treat_date) + 1
end_date = as_date('2022-12-31')
x = c('병원', '의원', '부속의료기관', '산후조리업', '안전상비의약품 판매업소', '약국', '응급환자이송업','의료법인', '의료유사업', '안경업', '의료기기수리업', '의료기기판매(임대)업', '치과기공소', '동물병원','동물약국', '동물용의료용구판매업', '동물용의약품도매상', '동물장묘업', '동물생산업', '동물판매업','동물수입업', '동물전시업', '동물위탁관리업', '동물미용업', '동물운송업', '가축사육업','가축인공수정소','도축업', '부화업', '사료제조업', '종축업','게임물배급업', '게임물제작업', '복합영상물제공업','복합유통게임제공업', '인터넷컴퓨터게임시설제공업','일반게임제공업', '청소년게임제공업', '공연장','관광공연장업', '관광극장유흥업','관광궤도업', '관광사업자', '관광유람선업', '국제회의시설업','박물관, 미술관', '시내순환관광업', '유원시설업(기타)','일반유원시설업', '전문휴양업', '전통사찰','종합유원시설업', '종합휴양업', '지방문화원', '국제회의기획업', '대중문화예술기획업', '문화예술법인','노래연습장업', '비디오물감상실업', '비디오물배급업', '비디오물소극장업','비디오물시청제공업','비디오물제작업', '관광숙박업', '관광펜션업', '숙박업', '외국인관광도시민박업', '자동차야영장업','한옥체험업', '일반야영장업', '국내여행업', '국내외여행업', '종합여행업', '영화배급업', '영화상영관','영화상영업', '영화수입업', '영화제작업', '온라인음악서비스제공업', '음반.음악영상물배급업','음반.음악영상물제작업', '음반물배급업', '음반물제작업', '옥외광고업', '인쇄사', '출판사', '미용업','이용업', '세탁업', '의료기관세탁물처리업', '위탁급식영업', '집단급식소', '집단급식소식품판매업','건강기능식품유통전문판매업', '건강기능식품일반판매업', '축산판매업', '축산가공업', '식육포장처리업','식품냉동냉장업', '식품소분업', '식품운반업', '식품자동판매기업', '식품제조가공업', '식품첨가물제조업','식품판매업(기타)', '옹기류제조업', '용기·포장지제조업', '용기냉동기특정설비', '유통전문판매업','제과점영업', '즉석판매제조가공업', '집유업', '식용얼음판매업', '축산물보관업', '축산물운반업','단란주점영업', '유흥주점영업', '관광식당', '관광유흥음식점업', '외국인전용유흥음식점업', '일반음식점','휴게음식점', '대규모점포', '다단계판매업체', '방문판매업', '전화권유판매업', '통신판매업','후원방문판매업체', '목재수입유통업', '원목생산업', '제재업', '계량기수리업', '계량기수입업','계량기제조업', '계량기증명업', '고압가스업', '석연탄제조업', '석유및석유대체연료판매업체', '석유판매업', '액화석유가스용품제조업체', '일반도시가스업체', '전력기술감리업체', '전력기술설계업체', '특정고압가스업','지하수시공업체', '지하수영향조사기관', '지하수정화업체', '가축분뇨 수집운반업','가축분뇨배출시설관리업(사업장)', '개인하수처리시설관리업(사업장)', '건물위생관리업', '건설폐기물처리업',
'급수공사대행업', '단독정화조/오수처리시설설계시공업', '대기오염물질배출시설설치사업장','배출가스전문정비사업자(확인검사대행자)', '분뇨수집운반업', '소독업', '수질오염원설치시설(기타)','쓰레기종량제봉투판매업', '저수조청소업', '환경관리대행기관', '환경전문공사업', '환경측정대행업','환경컨설팅회사', '골프연습장업', '골프장', '등록체육시설업', '당구장업', '무도장업', '무도학원업','빙상장업', '수영장업', '스키장','종합체육시설업', '승마장업', '썰매장업', '요트장업', '체육도장업','체력단련장업', '담배도매업', '담배소매업', '담배수입판매업체', '목욕장업', '국제물류주선업','물류창고업체', '민방위급수시설', '민방위대피시설', '상조업', '승강기유지관리업체', '승강기제조및수입업체','요양보호사교육기관', '장례지도사 교육기관', '무료직업소개소', '유료직업소개소')
lic$개업시기 = as.Date(lic$개업시기)
lic$폐업시기 = as.Date(lic$폐업시기)
df_o = lic %>%
filter(개방서비스명 %in% x, 영업상태 == 1) %>%
filter(개업시기 >= start_date, 개업시기 <= end_date) %>%
group_by(개업시기, 개방서비스명) %>%
summarise(기준=sum(기준)) %>%
spread(개방서비스명, 기준)
df_o
df_c = lic %>%
filter(개방서비스명 %in% x, 영업상태 == 0) %>%
filter(폐업시기 >= start_date, 폐업시기 <= end_date) %>%
group_by(폐업시기, 개방서비스명) %>%
summarise(기준=sum(기준)) %>%
spread(개방서비스명, 기준)
df_c
df_o = read.csv('df_o.csv')
df_c = read.csv('df_c.csv')
df_o
df_c
df_o_c_1 = zoo(as.data.frame(df_o[,2]), df_o$개업시기)
causal_impact = CausalImpact(data = df_o_c_1, pre.period = as_date(c(start_date, treat_date)), post.period = as_date(c(treat_date_p1, end_date)))
plot(causal_impact)
df_o = read.csv('df_o.csv')
df_c = read.csv('df_c.csv')
df_o
df_c
df_o = read.csv('df_o.csv')
df_c = read.csv('df_c.csv')
df_o
df_o = read.csv('df_o.csv')
df_c = read.csv('df_c.csv')
df_o
df_c
df_o = read.csv('df_o.csv')
df_c = read.csv('df_c.csv')
df_o = read.csv('df_o.csv')
df_c = read.csv('df_c.csv')
df_o
df_c
df_o_c_1 = zoo(as.data.frame(df_o[,2]), df_o$개업시기)
causal_impact = CausalImpact(data = df_o_c_1, pre.period = as_date(c(start_date, treat_date)), post.period = as_date(c(treat_date_p1, end_date)))
df_o_c_1 = zoo(as.data.frame(df_o[,2]), df_o$개업시기)
causal_impact = CausalImpact(data = df_o_c_1, pre.period = as_date(c(start_date, treat_date)), post.period = as_date(c(treat_date_p1, end_date)))
df_o = read.csv('df_o.csv')
df_c = read.csv('df_c.csv')
df_o
df_c
df_o_c_1 = zoo(as.data.frame(df_o[,2]), df_o$개업시기)
causal_impact = CausalImpact(data = df_o_c_1, pre.period = as_date(c(start_date, treat_date)), post.period = as_date(c(treat_date_p1, end_date)))
plot(causal_impact)
start_date = as_date('2020-01-22')
treat_date = as_date('2022-04-18')
treat_date_p1 = as_date(treat_date) + 1
end_date = as_date('2022-12-31')
causal_impact = CausalImpact(data = df_o_c_1, pre.period = as_date(c(start_date, treat_date)), post.period = as_date(c(treat_date_p1, end_date)))
causal_impact = CausalImpact(data = df_o_c_1,
pre.period = as_date(c(start_date, treat_date)),
post.period = as_date(c(treat_date_p1, end_date)))
setwd('C:/Users/Edward/Desktop/PythonWorkspace/인허가')
library(dplyr)
library(readr)
library(CausalImpact)
library(tidyverse)
library(lubridate)
lic = read.csv('ci.csv')
lic
lic = lic[,-1]
lic
start_date = as_date('2020-01-22')
treat_date = as_date('2022-04-18')
treat_date_p1 = as_date(treat_date) + 1
end_date = as_date('2022-12-31')
x = c('병원', '의원', '부속의료기관', '산후조리업', '안전상비의약품 판매업소', '약국', '응급환자이송업','의료법인', '의료유사업', '안경업', '의료기기수리업', '의료기기판매(임대)업', '치과기공소', '동물병원','동물약국', '동물용의료용구판매업', '동물용의약품도매상', '동물장묘업', '동물생산업', '동물판매업','동물수입업', '동물전시업', '동물위탁관리업', '동물미용업', '동물운송업', '가축사육업','가축인공수정소','도축업', '부화업', '사료제조업', '종축업','게임물배급업', '게임물제작업', '복합영상물제공업','복합유통게임제공업', '인터넷컴퓨터게임시설제공업','일반게임제공업', '청소년게임제공업', '공연장','관광공연장업', '관광극장유흥업','관광궤도업', '관광사업자', '관광유람선업', '국제회의시설업','박물관, 미술관', '시내순환관광업', '유원시설업(기타)','일반유원시설업', '전문휴양업', '전통사찰','종합유원시설업', '종합휴양업', '지방문화원', '국제회의기획업', '대중문화예술기획업', '문화예술법인','노래연습장업', '비디오물감상실업', '비디오물배급업', '비디오물소극장업','비디오물시청제공업','비디오물제작업', '관광숙박업', '관광펜션업', '숙박업', '외국인관광도시민박업', '자동차야영장업','한옥체험업', '일반야영장업', '국내여행업', '국내외여행업', '종합여행업', '영화배급업', '영화상영관','영화상영업', '영화수입업', '영화제작업', '온라인음악서비스제공업', '음반.음악영상물배급업','음반.음악영상물제작업', '음반물배급업', '음반물제작업', '옥외광고업', '인쇄사', '출판사', '미용업','이용업', '세탁업', '의료기관세탁물처리업', '위탁급식영업', '집단급식소', '집단급식소식품판매업','건강기능식품유통전문판매업', '건강기능식품일반판매업', '축산판매업', '축산가공업', '식육포장처리업','식품냉동냉장업', '식품소분업', '식품운반업', '식품자동판매기업', '식품제조가공업', '식품첨가물제조업','식품판매업(기타)', '옹기류제조업', '용기·포장지제조업', '용기냉동기특정설비', '유통전문판매업','제과점영업', '즉석판매제조가공업', '집유업', '식용얼음판매업', '축산물보관업', '축산물운반업','단란주점영업', '유흥주점영업', '관광식당', '관광유흥음식점업', '외국인전용유흥음식점업', '일반음식점','휴게음식점', '대규모점포', '다단계판매업체', '방문판매업', '전화권유판매업', '통신판매업','후원방문판매업체', '목재수입유통업', '원목생산업', '제재업', '계량기수리업', '계량기수입업','계량기제조업', '계량기증명업', '고압가스업', '석연탄제조업', '석유및석유대체연료판매업체', '석유판매업', '액화석유가스용품제조업체', '일반도시가스업체', '전력기술감리업체', '전력기술설계업체', '특정고압가스업','지하수시공업체', '지하수영향조사기관', '지하수정화업체', '가축분뇨 수집운반업','가축분뇨배출시설관리업(사업장)', '개인하수처리시설관리업(사업장)', '건물위생관리업', '건설폐기물처리업',
'급수공사대행업', '단독정화조/오수처리시설설계시공업', '대기오염물질배출시설설치사업장','배출가스전문정비사업자(확인검사대행자)', '분뇨수집운반업', '소독업', '수질오염원설치시설(기타)','쓰레기종량제봉투판매업', '저수조청소업', '환경관리대행기관', '환경전문공사업', '환경측정대행업','환경컨설팅회사', '골프연습장업', '골프장', '등록체육시설업', '당구장업', '무도장업', '무도학원업','빙상장업', '수영장업', '스키장','종합체육시설업', '승마장업', '썰매장업', '요트장업', '체육도장업','체력단련장업', '담배도매업', '담배소매업', '담배수입판매업체', '목욕장업', '국제물류주선업','물류창고업체', '민방위급수시설', '민방위대피시설', '상조업', '승강기유지관리업체', '승강기제조및수입업체','요양보호사교육기관', '장례지도사 교육기관', '무료직업소개소', '유료직업소개소')
lic$개업시기 = as.Date(lic$개업시기)
lic$폐업시기 = as.Date(lic$폐업시기)
df_o = lic %>%
filter(개방서비스명 %in% x, 영업상태 == 1) %>%
filter(개업시기 >= start_date, 개업시기 <= end_date) %>%
group_by(개업시기, 개방서비스명) %>%
summarise(기준=sum(기준)) %>%
spread(개방서비스명, 기준)
df_o
df_c = lic %>%
filter(개방서비스명 %in% x, 영업상태 == 0) %>%
filter(폐업시기 >= start_date, 폐업시기 <= end_date) %>%
group_by(폐업시기, 개방서비스명) %>%
summarise(기준=sum(기준)) %>%
spread(개방서비스명, 기준)
df_c
write.csv(df_o,'df_o_all.csv')
write.csv(df_o,'df_o_all.csv')
setwd('C:/Users/Edward/Desktop/PythonWorkspace/인허가')
library(dplyr)
library(readr)
library(CausalImpact)
library(tidyverse)
library(lubridate)
lic = read.csv('ci.csv')
lic
lic = lic[,-1]
lic
start_date = as_date('1900-01-01')
treat_date = as_date('2022-04-18')
treat_date_p1 = as_date(treat_date) + 1
end_date = as_date('2022-12-31')
x = c('병원', '의원', '부속의료기관', '산후조리업', '안전상비의약품 판매업소', '약국', '응급환자이송업','의료법인', '의료유사업', '안경업', '의료기기수리업', '의료기기판매(임대)업', '치과기공소', '동물병원','동물약국', '동물용의료용구판매업', '동물용의약품도매상', '동물장묘업', '동물생산업', '동물판매업','동물수입업', '동물전시업', '동물위탁관리업', '동물미용업', '동물운송업', '가축사육업','가축인공수정소','도축업', '부화업', '사료제조업', '종축업','게임물배급업', '게임물제작업', '복합영상물제공업','복합유통게임제공업', '인터넷컴퓨터게임시설제공업','일반게임제공업', '청소년게임제공업', '공연장','관광공연장업', '관광극장유흥업','관광궤도업', '관광사업자', '관광유람선업', '국제회의시설업','박물관, 미술관', '시내순환관광업', '유원시설업(기타)','일반유원시설업', '전문휴양업', '전통사찰','종합유원시설업', '종합휴양업', '지방문화원', '국제회의기획업', '대중문화예술기획업', '문화예술법인','노래연습장업', '비디오물감상실업', '비디오물배급업', '비디오물소극장업','비디오물시청제공업','비디오물제작업', '관광숙박업', '관광펜션업', '숙박업', '외국인관광도시민박업', '자동차야영장업','한옥체험업', '일반야영장업', '국내여행업', '국내외여행업', '종합여행업', '영화배급업', '영화상영관','영화상영업', '영화수입업', '영화제작업', '온라인음악서비스제공업', '음반.음악영상물배급업','음반.음악영상물제작업', '음반물배급업', '음반물제작업', '옥외광고업', '인쇄사', '출판사', '미용업','이용업', '세탁업', '의료기관세탁물처리업', '위탁급식영업', '집단급식소', '집단급식소식품판매업','건강기능식품유통전문판매업', '건강기능식품일반판매업', '축산판매업', '축산가공업', '식육포장처리업','식품냉동냉장업', '식품소분업', '식품운반업', '식품자동판매기업', '식품제조가공업', '식품첨가물제조업','식품판매업(기타)', '옹기류제조업', '용기·포장지제조업', '용기냉동기특정설비', '유통전문판매업','제과점영업', '즉석판매제조가공업', '집유업', '식용얼음판매업', '축산물보관업', '축산물운반업','단란주점영업', '유흥주점영업', '관광식당', '관광유흥음식점업', '외국인전용유흥음식점업', '일반음식점','휴게음식점', '대규모점포', '다단계판매업체', '방문판매업', '전화권유판매업', '통신판매업','후원방문판매업체', '목재수입유통업', '원목생산업', '제재업', '계량기수리업', '계량기수입업','계량기제조업', '계량기증명업', '고압가스업', '석연탄제조업', '석유및석유대체연료판매업체', '석유판매업', '액화석유가스용품제조업체', '일반도시가스업체', '전력기술감리업체', '전력기술설계업체', '특정고압가스업','지하수시공업체', '지하수영향조사기관', '지하수정화업체', '가축분뇨 수집운반업','가축분뇨배출시설관리업(사업장)', '개인하수처리시설관리업(사업장)', '건물위생관리업', '건설폐기물처리업',
'급수공사대행업', '단독정화조/오수처리시설설계시공업', '대기오염물질배출시설설치사업장','배출가스전문정비사업자(확인검사대행자)', '분뇨수집운반업', '소독업', '수질오염원설치시설(기타)','쓰레기종량제봉투판매업', '저수조청소업', '환경관리대행기관', '환경전문공사업', '환경측정대행업','환경컨설팅회사', '골프연습장업', '골프장', '등록체육시설업', '당구장업', '무도장업', '무도학원업','빙상장업', '수영장업', '스키장','종합체육시설업', '승마장업', '썰매장업', '요트장업', '체육도장업','체력단련장업', '담배도매업', '담배소매업', '담배수입판매업체', '목욕장업', '국제물류주선업','물류창고업체', '민방위급수시설', '민방위대피시설', '상조업', '승강기유지관리업체', '승강기제조및수입업체','요양보호사교육기관', '장례지도사 교육기관', '무료직업소개소', '유료직업소개소')
lic$개업시기 = as.Date(lic$개업시기)
lic$폐업시기 = as.Date(lic$폐업시기)
df_o = lic %>%
filter(개방서비스명 %in% x, 영업상태 == 1) %>%
filter(개업시기 >= start_date, 개업시기 <= end_date) %>%
group_by(개업시기, 개방서비스명) %>%
summarise(기준=sum(기준)) %>%
spread(개방서비스명, 기준)
df_o
df_c = lic %>%
filter(개방서비스명 %in% x, 영업상태 == 0) %>%
filter(폐업시기 >= start_date, 폐업시기 <= end_date) %>%
group_by(폐업시기, 개방서비스명) %>%
summarise(기준=sum(기준)) %>%
spread(개방서비스명, 기준)
df_c
write.csv(df_o,'df_o_all.csv')
write.csv(df_o,'df_o_all.csv')
write.csv(df_o,'df_o_all.csv')
write.csv(df_c,'df_c_all.csv')
